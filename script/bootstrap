#!/bin/bash
set -e

# install or update dependencies

# from https://gist.github.com/nicferrier/2277987
clone_or_update() {
    REPOSRC=$1
    LOCALREPO=$2
    LOCALREPO_VC_DIR=$LOCALREPO/.git

    if [ ! -d "$LOCALREPO_VC_DIR" ]; then
        git clone "$REPOSRC" "$LOCALREPO"
    else
        cd "$LOCALREPO"
        git pull "$REPOSRC"
    fi
}

function canexecute() {
    EPATH=$(type -path "$1")
    if [ -n "$EPATH" ] && [ -x "$EPATH" ]; then
        return 0
    else
        return 1
    fi
}

PROJECT_PATH=$(git rev-parse --show-toplevel)
DEPS_PATH="${PROJECT_PATH}/libs"
mkdir -p "$DEPS_PATH"
clone_or_update "https://github.com/ColasNahaboo/cgibashopts.git" "$DEPS_PATH/cgibashopts"

if [ ! -e "$PROJECT_PATH/.mysql.cnf" ]; then
    echo "Creating mysql conf in .mysql.cnf. You'll have to fill in some details"
    cat << EOF > "$PROJECT_PATH/.mysql.cnf"
[client]
password=PASSWORD
user=USER
database=oa_scuttle
host=mysql.ordoacerbus.com
EOF
fi

## pre-commit
if ! canexecute "pre-commit"; then
    if canexecute brew; then
        if brew install pre-commit; then
            echo "Installed pre-commit via brew"
        else
            echo "Attempted to install pre-commit via brew, but failed"
            exit 1
        fi
    elif canexecute python; then
        echo "Attempting to install a local pre-commit with python"
        if curl https://pre-commit.com/install-local.py | python -; then
            echo "Installed local pre-commit via python"
        else
            echo "Attempted to install pre-commit via python, but failed"
            exit 1
        fi
    else
        echo "Need to install pre-commit but I don't know how, please do it yourself"
        exit 2
    fi
fi

# install hooks
if canexecute "pre-commit"; then
    pre-commit install || exit 1
    echo
    echo "You might want to try 'pre-commit run --all-files' now"
fi
